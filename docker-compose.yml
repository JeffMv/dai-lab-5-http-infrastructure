#version: '3.9'

services:
  webapp:
    image: "web-page-static"
    build:
      context: ./webapp-static  # Build from the nginx/ directory
    #container_name: html-nginx-static
    deploy:
      replicas: 3
    networks:
      - traefik-network
    labels:
     - traefik.http.routers.webapp.entryPoints=http
     - traefik.http.routers.webapp.rule=PathPrefix(`/`)
     - traefik.http.services.webapp.loadbalancer.server.port=80

  apibackend:
    image: "api-todo-list-javalin"
    build:
      context: ./web-api  # Build from the directory
    #container_name: api-todo-list
    deploy:
      replicas: 6
    networks:
      - traefik-network
    labels:
     - traefik.http.routers.apibackend.entryPoints=http
     - traefik.http.routers.apibackend.rule=PathPrefix(`/api`)
     - traefik.http.services.apibackend.loadbalancer.server.port=7070

     - traefik.http.services.apibackend.loadbalancer.sticky.cookie=true
     - traefik.http.services.apibackend.loadbalancer.sticky.cookie.name=sticky-cookie
     - traefik.http.services.apibackend.loadbalancer.sticky.cookie.secure=false

  reverse_proxy:
    image: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--entryPoints.http.address=:80"

      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/traefik/access.json"
      - "--accesslog.format=json"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./logs:/var/log/traefik
    networks:
      - traefik-network
    ports:
      - "8080:8080" # traefik
      - "80:80" # web static page

networks:
  traefik-network:
    driver: bridge
